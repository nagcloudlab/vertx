


service.name=txr-service ( dev )



# dev
%dev.quarkus.datasource.db-kind=h2
%dev.quarkus.datasource.username=sa
%dev.quarkus.datasource.password=password
%dev.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb


# test
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=password
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb



quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${POSTGRES_USER}
quarkus.datasource.password=${POSTGRES_PASSWORD}
quarkus.datasource.jdbc.url=jdbc:postgresql://${POSTGRES_HOST}:5432/${POSTGRES_DB}



quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.sql-load-script = import.sql

%dev.quarkus.hibernate-orm.log.sql=true
%test.quarkus.hibernate-orm.log.sql=true

quarkus.swagger-ui.always-include=true



quarkus.native.container-runtime=docker
quarkus.container-image.build=true


quarkus.container-image.group=nagabhushanamn
quarkus.container-image.name=txr-service
quarkus.container-image.tag=v4


# quarkus.container-image.push=true
# quarkus.container-image.registry=docker.io




%prod.quarkus.kubernetes.labels.app-type=txr-service
%prod.quarkus.kubernetes.annotations.app-type=txr-service






%prod.quarkus.kubernetes-config.enabled=true
%prod.quarkus.kubernetes.env.secrets=postgres-secret
%prod.quarkus.kubernetes.env.configmaps=postgres-config
%prod.quarkus.kubernetes-config.config-maps=txr-service-config





